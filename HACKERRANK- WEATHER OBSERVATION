          STATION
+-------------+------------+
| Field       |   Type     |
+-------------+------------+ 
| ID          | INTEGER    |
| CITY        | VARCHAR(21)|
| STATE       | VARCHAR(2) | 
| LAT_N       | NUMERIC    |     
| LONG_W      | NUMERIC    |      
+-------------+------------+ 
 
/*Query a list of CITY and STATE from the STATION table.*/
SELECT CITY, STATE FROM STATION;   


/*Find the difference between the total number of CITY entries in the table and the number of distinct CITY entries in the table.*/
SELECT COUNT(CITY) - COUNT(DISTINCT CITY) FROM STATION;          

 
/*Query a list of CITY names from STATION for cities that have an even ID number.*/
SELECT DISTINCT CITY FROM STATION WHERE ID % 2=0 

 
/*Query the following two values from the STATION table:
The sum of all values in LAT_N rounded to a scale of  2 decimal places.         
The sum of all values in LONG_W rounded to a scale of  2 decimal places.*/
SELECT CAST(ROUND(SUM(LAT_N),2)AS DECIMAL(10,2)), CAST(ROUND(SUM(LONG_W),2) AS DECIMAL(10,2)) FROM STATION;

 
/*Query the sum of Northern Latitudes (LAT_N) from STATION having values greater than 38.7880 and less than 137.2345 Truncate your answer to 4 decimal places.*/
SELECT CAST(ROUND(SUM(LAT_N),4)AS DECIMAL (9,4)) FROM STATION
WHERE LAT_N > 38.7880 AND LAT_N < 137.2345
ORDER BY CAST(ROUND(SUM(LAT_N),4)AS DECIMAL (9,4));
 
 
/* Query the greatest value of the Northern Latitudes (LAT_N) from STATION that is less than 137.2345. Truncate your answer to 4 decimal places.*/
SELECT ROUND(MAX(LAT_N), 4) FROM STATION
WHERE LAT_N < 137.2345; 
 
 
/*Query the Western Longitude (LONG_W) for the largest Northern Latitude (LAT_N) in STATION that is less than 137.2345. Round your answer to 4 decimal places.*/
SELECT ROUND(LONG_W,4)
FROM STATION
WHERE LAT_N = (SELECT MAX(LAT_N) FROM STATION WHERE LAT_N < 137.2345);


/*Query the smallest Northern Latitude (LAT_N) from STATION that is greater than 38.7880. Round your answer to 4 decimal places.*/
SELECT ROUND(MIN(LAT_N), 4) FROM STATION
WHERE LAT_N > 38.7780;
 
 
/*Query the Western Longitude (LONG_W)where the smallest Northern Latitude (LAT_N) in STATION is greater than 38.7880. Round your answer to 4 decimal places.*/
SELECT ROUND(LONG_W,4) FROM STATION
WHERE LAT_N = (SELECT MIN(LAT_N) FROM STATION WHERE LAT_N > 38.7780);


 /* Query the two cities in STATION with the shortest and longest CITY names, as well as their respective lengths (i.e.: number of characters in the name). 
 If there is more than one smallest or largest city, choose the one that comes first when ordered alphabetically.*/
select CITY,LENGTH(CITY) from STATION order by Length(CITY) asc, CITY limit 1; 
select CITY,LENGTH(CITY) from STATION order by Length(CITY) desc, CITY limit 1;


/*Query the list of CITY names starting with vowels (i.e., a, e, i, o, or u) from STATION. Your result cannot contain duplicates*/
SELECT DISTINCT CITY 
FROM STATION 
WHERE lower(substr(CITY,1,1)) in ('a','e','i','o','u') ;
 
 
/*Query the list of CITY names ending with vowels (a, e, i, o, u) from STATION. Your result cannot contain duplicates.*/
SELECT DISTINCT CITY
FROM STATION
WHERE RIGHT(CITY,1) IN ('a', 'e', 'i', 'o', 'u');
 
 
/*Query the list of CITY names from STATION which have vowels (i.e., a, e, i, o, and u) as both their first and last characters. Your result cannot contain duplicates.*/
SELECT DISTINCT city
FROM   station
WHERE  city RLIKE '^[aeiouAEIOU].*[aeiouAEIOU]$';
 
 
/*Query the list of CITY names from STATION that do not start with vowels. Your result cannot contain duplicates.*/
SELECT DISTINCT CITY FROM STATION WHERE CITY NOT RLIKE '^[aeiouAEIOU].*$';


/*Consider  P1(a,b) and P2(c,d)  to be two points on a 2D plane.
a. happens to equal the minimum value in Northern Latitude (LAT_N in STATION).
b. happens to equal the minimum value in Western Longitude (LONG_W in STATION).
c. happens to equal the maximum value in Northern Latitude (LAT_N in STATION).
d. happens to equal the maximum value in Western Longitude (LONG_W in STATION).
Query the Manhattan Distance between points P1 and P2 and round it to a scale of 4 decimal places.*/
SELECT ROUND(((MAX(LAT_N) - MIN(LAT_N)) + (MAX(LONG_W) - MIN(LONG_W))), 4) FROM STATION;


/* Consider P1 (a,c) and P2(b,d)  to be two points on a 2D plane where (a,b) are the respective minimum and maximum values of Northern Latitude (LAT_N),
and (c,d) are the respective minimum and maximum values of Western Longitude (LONG_W) in STATION.
Query the Euclidean Distance between points P1 and P2 and format your answer to display 4 decimal digits.*/
SELECT ROUND(SQRT(POWER(MAX(LAT_N) - MIN(LAT_N), 2) + POWER (MAX(LONG_W) - MIN(LONG_W), 2)), 4) FROM STATION;

 
/*A median is defined as a number separating the higher half of a data set from the lower half. Query the median of the Northern Latitudes (LAT_N)
from STATION and round your answer to  decimal places.*/
SET @rowIndex := -1;
SELECT ROUND(AVG(m.LAT_N),4) FROM
(SELECT @rowIndex:= @rowIndex+1 AS rowIndex, l.LAT_N FROM STATION AS l ORDER BY l.LAT_N) AS m
WHERE m.rowIndex IN (FLOOR(@rowIndex/2), CEIL(@rowIndex/2));

